#!/usr/local/bin/Rscript
default_file_name <- '/data/output_slicer.json'
input <- commandArgs(trailingOnly=TRUE)[1]
output <- commandArgs(trailingOnly=TRUE)[2]

# Arg checking, and adding /data/ to output.
if(is.na(output)){
  output <- default_file_name
} else {
  output <- paste(c("/data/", output),collapse="")
}

library(SLICER)
library("lle")

read_data <- function(file){
  # Read tab matrix from data dir.
  data <- as.matrix(read.table(paste(c("/data/",file),collapse=""), sep="\t", header=T, row.names=1))
  
}
slicer_analysis <- function(exp_matrix){
  cell_names <- colnames(traj)
  if (is.null(cell_names)) {
    cell_names <- 1:dim(traj)[1]
  }
  
  genes = select_genes(traj)
  k = select_k(traj[,genes], kmin=5)
  traj_lle = lle(traj[,genes], m=2, k)$Y
  traj_graph = conn_knn_graph(traj_lle,5)
  ends = find_extreme_cells(traj_graph, traj_lle)
  start = 1
  cell_ordering = cell_order(traj_graph, start)
  branch_assignment = assign_branches(traj_graph,start)
  return(list(cell_names=cell_names, cell_ordering=cell_ordering, branch_assignment=branch_assignment))
}

data<-read_data(input)
slicer_list <- slicer_analysis(data)

branch_assignment <- slicer_list[["branch_assignment"]]
cell_ordering <- slicer_list[["cell_ordering"]]
cell_names <- slicer_list[["cell_names"]]

source("/home/traj-converters/src/R/slicer_convert.r")

write_common_json(branch_assignment, cell_ordering, cell_names, file=output)
